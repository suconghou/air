"use strict";function _interopDefault(t){return t&&"object"==typeof t&&"default"in t?t.default:t}var process=_interopDefault(require("process")),fs=_interopDefault(require("fs")),util=_interopDefault(require("util")),path=_interopDefault(require("path")),os=_interopDefault(require("os")),http=_interopDefault(require("http")),querystring=_interopDefault(require("querystring")),child_process=_interopDefault(require("child_process"));const fsStat=util.promisify(fs.stat);var utilnode={resolveLookupPaths(t,s){const e=[],i=[];return t.split(path.sep).forEach(t=>{i.push(t),e.push(path.resolve(path.join(path.sep,...i,s)))}),e.reverse()},getConfig(t,s){/static$/.test(t)||(t=path.join(t,"static"));const e=this.resolveLookupPaths(t,s),i=this.findExist(e);if(i)try{const t=require(i);return t.path=path.dirname(i),t}catch(t){console.error(t.toString())}return{}},findExist(t){for(let s=0,e=t.length;s<e;s++){const e=t[s];try{return fs.accessSync(e,fs.constants.R_OK),e}catch(t){}}},getMaxUpdateTime:function(t){const s=[];for(let e=0,i=t.length;e<i;e++){const i=t[e],o=fs.statSync(i);s.push(o.mtime.getTime())}return Math.max.apply(this,s)},async getUpdateTime(t){const s=[];for(let e=0,i=t.length;e<i;e++){const i=t[e],o=await fsStat(i);s.push(o.mtime.getTime())}return Math.max.apply(this,s)},getName(t,s,e){const i=s.map(t=>path.basename(t,e)).join("-");return path.join(t,i)},getStatus:()=>({pid:process.pid,node:process.version,os:process.platform+process.arch,freemem:Math.round(os.freemem()/1048576),allmem:Math.round(os.totalmem()/1048576),cpus:os.cpus(),load:os.loadavg(),uptime:process.uptime(),memory:process.memoryUsage()})};const caches=new Map;var log={errorlog:[],log(t){t=t.toString(),this.errorlog.length>1e3&&(this.errorlog=[]);var s=new Date;t=s.toLocaleDateString()+" "+s.toLocaleTimeString()+" "+t,this.errorlog.push(t),console.log(t)},get:t=>caches.get(t),set:(t,s)=>caches.set(t,s)},utiljs={isFunction:t=>"function"==typeof t,unique:t=>Array.from(new Set(t)),getParams(t){const s={"-p":"port","-d":"root","--debug":"debug","--clean":"clean"},e={},i=Object.keys(s);let o;return t.forEach(t=>{i.includes(t)?"--"==t.substr(0,2)?e[s[t]]=!0:o=s[t]:o&&"-"!=t.toString().charAt(0)?(e[o]=t,o=null):o=null}),e}},compress={compressLessReq(t,s,e,i,o){const a=s[0].replace(".css",""),n=a.split("/"),p=n.pop().split("-").filter(t=>t).map(t=>path.join(i,...n,t)+".less"),c={urlArgs:e.ver?`ver=${e.ver}`:null,env:"development",useFileCache:!1};return new Promise((e,i)=>{(async()=>{try{const n=await utilnode.getUpdateTime(p),{css:r,hit:l}=await this.compressLessCache(n,a,p,c);t.writeHead(200,{"Content-Type":"text/css","X-Cache":l?"hit":"miss"}),t.end(r),e(!0)}catch(a){const n=s[0].replace(/\/static\//,""),{css:p}=o.static;if(p){if(Object.keys(p).includes(n)){const s=p[n].map(t=>path.join(o.path,t));try{const o=await utilnode.getUpdateTime(s),{css:a,hit:p}=await this.compressLessCache(o,n,s,c);t.writeHead(200,{"Content-Type":"text/css","X-Cache":p?"hit":"miss"}),t.end(a),e(!0)}catch(t){i(t)}}else e(!1)}}})()})},async compressLessCache(t,s,e,i){const o=log.get(s);if(o&&o.maxTime==t&&i.urlArgs==o.urlArgs)return{css:o.css,hit:!0};const a=await this.compressLess(e,i);return log.set(s,{css:a.css,urlArgs:i.urlArgs,maxTime:t}),{css:a.css,hit:!1}},compressLess(t,s){let{paths:e,urlArgs:i,compress:o,useFileCache:a,env:n}=s||{};const p=utiljs.unique(t);var c=p.map(function(t){return'@import "'+t+'";'}).join("\r\n");const r=require("less"),l={plugins:[new(require("less-plugin-autoprefix"))({browsers:["last 5 versions","ie > 8","Firefox ESR"]})],paths:e,urlArgs:i,compress:o,useFileCache:a,env:n};return this.cleanLessCache(r,p),new Promise((t,s)=>{r.render(c,l).then(t,s).catch(s)})},cleanLessCache(t,s){(t.environment&&t.environment.fileManagers||[]).forEach(t=>{t.contents&&Object.keys(t.contents).forEach(e=>{s.includes(e)&&delete t.contents[e]})})},compressJsReg(t,s,e,i,o){const a=s[0].replace(".js",""),n=a.split("/"),p=n.pop().split("-").filter(t=>t).map(t=>path.join(i,...n,t)+".js"),c={debug:!0};return new Promise((e,i)=>{(async()=>{try{const n=await utilnode.getUpdateTime(p),{js:r,hit:l}=await this.compressJsCache(n,a,p,c);t.writeHead(200,{"Content-Type":"application/javascript","X-Cache":l?"hit":"miss"}),t.end(r),e(!0)}catch(a){const n=s[0].replace(/\/static\//,""),{js:p}=o.static;if(p){if(Object.keys(p).includes(n)){const s=p[n].map(t=>path.join(o.path,t));try{const o=await utilnode.getUpdateTime(s),{js:a,hit:p}=await this.compressJsCache(o,n,s,c);t.writeHead(200,{"Content-Type":"application/javascript","X-Cache":p?"hit":"miss"}),t.end(a),e(!0)}catch(t){i(t)}}else e(!1)}}})()})},async compressJsCache(t,s,e,i){const o=log.get(s);if(o&&o.maxTime==t)return{js:o.js,hit:!0};const a=await this.compressJs(e,i);return log.set(s,{js:a.code,maxTime:t}),{js:a.code,hit:!1}},compressJs(t,s){const e=utiljs.unique(t);let i;s.debug?i={mangle:!1,compress:{sequences:!1,properties:!1,dead_code:!1,unused:!1,booleans:!1,join_vars:!1,if_return:!1,conditionals:!1,hoist_funs:!1,drop_debugger:!1,evaluate:!1,loops:!1}}:(i={mangle:!0,compress:{sequences:!0,properties:!0,dead_code:!0,unused:!0,booleans:!0,join_vars:!0,if_return:!0,conditionals:!0}},s.clean&&(i.compress.drop_console=!0,i.compress.drop_debugger=!0,i.compress.evaluate=!0,i.compress.loops=!0));const o=require("uglify-js");return new Promise((t,s)=>{this.getContent(e).then(s=>{const e=o.minify(s,i);t(e)}).catch(s)})},compressByConfig(t,s){if(t&&t.static){const{css:e,js:i}=t.static;e&&Object.keys(e).forEach(i=>{const o=e[i].map(s=>path.join(t.path,s)),a=path.join(t.path,i);this.compressLess(o,Object.assign({compress:!s.debug},s)).then(t=>{fs.writeFileSync(a,t.css)}).catch(t=>{console.error(t.toString())})}),i&&Object.keys(i).forEach(e=>{const o=i[e].map(s=>path.join(t.path,s)),a=path.join(t.path,e);console.info(o,a),this.compressJs(o,s).then(t=>{fs.writeFileSync(a,t.code)}).catch(t=>{console.error(t.toString())})})}},getContent(t){const s=t.map(t=>new Promise((s,e)=>{fs.readFile(t,"utf-8",function(t,i){t?e(t):s(i)})}));return new Promise((e,i)=>{Promise.all(s).then(s=>{const i={};t.forEach((t,e)=>{i[t]=s[e]}),e(i)}).catch(i)})}};const routers={POST:{reload(t,s,e,i){}},GET:{reload(t,s,e,i){}}},regRouters={GET:[{reg:/[\w\-/]+\.css$/,handler:compress.compressLessReq.bind(compress)},{reg:/[\w\-/]+\.js$/,handler:compress.compressJsReg.bind(compress)}]};var route={getRouter(t){if(routers[t])return routers[t]},getRegxpRouter(t,s){let e;if(regRouters[t]&&(e=regRouters[t]),e)for(let t=0,i=e.length;t<i;t++){const i=e[t];if(i.reg.test(s))return{...i,matches:s.match(i.reg)}}}},types={"application/andrew-inset":["ez"],"application/applixware":["aw"],"application/atom+xml":["atom"],"application/atomcat+xml":["atomcat"],"application/atomsvc+xml":["atomsvc"],"application/bdoc":["bdoc"],"application/ccxml+xml":["ccxml"],"application/cdmi-capability":["cdmia"],"application/cdmi-container":["cdmic"],"application/cdmi-domain":["cdmid"],"application/cdmi-object":["cdmio"],"application/cdmi-queue":["cdmiq"],"application/cu-seeme":["cu"],"application/dash+xml":["mpd"],"application/davmount+xml":["davmount"],"application/docbook+xml":["dbk"],"application/dssc+der":["dssc"],"application/dssc+xml":["xdssc"],"application/ecmascript":["ecma"],"application/emma+xml":["emma"],"application/epub+zip":["epub"],"application/exi":["exi"],"application/font-tdpfr":["pfr"],"application/font-woff":["woff"],"application/geo+json":["geojson"],"application/gml+xml":["gml"],"application/gpx+xml":["gpx"],"application/gxf":["gxf"],"application/gzip":["gz"],"application/hjson":["hjson"],"application/hyperstudio":["stk"],"application/inkml+xml":["ink","inkml"],"application/ipfix":["ipfix"],"application/java-archive":["jar","war","ear"],"application/java-serialized-object":["ser"],"application/java-vm":["class"],"application/javascript":["js","mjs"],"application/json":["json","map"],"application/json5":["json5"],"application/jsonml+json":["jsonml"],"application/ld+json":["jsonld"],"application/lost+xml":["lostxml"],"application/mac-binhex40":["hqx"],"application/mac-compactpro":["cpt"],"application/mads+xml":["mads"],"application/manifest+json":["webmanifest"],"application/marc":["mrc"],"application/marcxml+xml":["mrcx"],"application/mathematica":["ma","nb","mb"],"application/mathml+xml":["mathml"],"application/mbox":["mbox"],"application/mediaservercontrol+xml":["mscml"],"application/metalink+xml":["metalink"],"application/metalink4+xml":["meta4"],"application/mets+xml":["mets"],"application/mods+xml":["mods"],"application/mp21":["m21","mp21"],"application/mp4":["mp4s","m4p"],"application/msword":["doc","dot"],"application/mxf":["mxf"],"application/octet-stream":["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","img","msi","msp","msm","buffer"],"application/oda":["oda"],"application/oebps-package+xml":["opf"],"application/ogg":["ogx"],"application/omdoc+xml":["omdoc"],"application/onenote":["onetoc","onetoc2","onetmp","onepkg"],"application/oxps":["oxps"],"application/patch-ops-error+xml":["xer"],"application/pdf":["pdf"],"application/pgp-encrypted":["pgp"],"application/pgp-signature":["asc","sig"],"application/pics-rules":["prf"],"application/pkcs10":["p10"],"application/pkcs7-mime":["p7m","p7c"],"application/pkcs7-signature":["p7s"],"application/pkcs8":["p8"],"application/pkix-attr-cert":["ac"],"application/pkix-cert":["cer"],"application/pkix-crl":["crl"],"application/pkix-pkipath":["pkipath"],"application/pkixcmp":["pki"],"application/pls+xml":["pls"],"application/postscript":["ai","eps","ps"],"application/pskc+xml":["pskcxml"],"application/raml+yaml":["raml"],"application/rdf+xml":["rdf"],"application/reginfo+xml":["rif"],"application/relax-ng-compact-syntax":["rnc"],"application/resource-lists+xml":["rl"],"application/resource-lists-diff+xml":["rld"],"application/rls-services+xml":["rs"],"application/rpki-ghostbusters":["gbr"],"application/rpki-manifest":["mft"],"application/rpki-roa":["roa"],"application/rsd+xml":["rsd"],"application/rss+xml":["rss"],"application/rtf":["rtf"],"application/sbml+xml":["sbml"],"application/scvp-cv-request":["scq"],"application/scvp-cv-response":["scs"],"application/scvp-vp-request":["spq"],"application/scvp-vp-response":["spp"],"application/sdp":["sdp"],"application/set-payment-initiation":["setpay"],"application/set-registration-initiation":["setreg"],"application/shf+xml":["shf"],"application/smil+xml":["smi","smil"],"application/sparql-query":["rq"],"application/sparql-results+xml":["srx"],"application/srgs":["gram"],"application/srgs+xml":["grxml"],"application/sru+xml":["sru"],"application/ssdl+xml":["ssdl"],"application/ssml+xml":["ssml"],"application/tei+xml":["tei","teicorpus"],"application/thraud+xml":["tfi"],"application/timestamped-data":["tsd"],"application/voicexml+xml":["vxml"],"application/wasm":["wasm"],"application/widget":["wgt"],"application/winhlp":["hlp"],"application/wsdl+xml":["wsdl"],"application/wspolicy+xml":["wspolicy"],"application/xaml+xml":["xaml"],"application/xcap-diff+xml":["xdf"],"application/xenc+xml":["xenc"],"application/xhtml+xml":["xhtml","xht"],"application/xml":["xml","xsl","xsd","rng"],"application/xml-dtd":["dtd"],"application/xop+xml":["xop"],"application/xproc+xml":["xpl"],"application/xslt+xml":["xslt"],"application/xspf+xml":["xspf"],"application/xv+xml":["mxml","xhvml","xvml","xvm"],"application/yang":["yang"],"application/yin+xml":["yin"],"application/zip":["zip"],"audio/3gpp":["*3gpp"],"audio/adpcm":["adp"],"audio/basic":["au","snd"],"audio/midi":["mid","midi","kar","rmi"],"audio/mp3":["*mp3"],"audio/mp4":["m4a","mp4a"],"audio/mpeg":["mpga","mp2","mp2a","mp3","m2a","m3a"],"audio/ogg":["oga","ogg","spx"],"audio/s3m":["s3m"],"audio/silk":["sil"],"audio/wav":["wav"],"audio/wave":["*wav"],"audio/webm":["weba"],"audio/xm":["xm"],"font/collection":["ttc"],"font/otf":["otf"],"font/ttf":["ttf"],"font/woff":["*woff"],"font/woff2":["woff2"],"image/apng":["apng"],"image/bmp":["bmp"],"image/cgm":["cgm"],"image/g3fax":["g3"],"image/gif":["gif"],"image/ief":["ief"],"image/jp2":["jp2","jpg2"],"image/jpeg":["jpeg","jpg","jpe"],"image/jpm":["jpm"],"image/jpx":["jpx","jpf"],"image/ktx":["ktx"],"image/png":["png"],"image/sgi":["sgi"],"image/svg+xml":["svg","svgz"],"image/tiff":["tiff","tif"],"image/webp":["webp"],"message/disposition-notification":["disposition-notification"],"message/global":["u8msg"],"message/global-delivery-status":["u8dsn"],"message/global-disposition-notification":["u8mdn"],"message/global-headers":["u8hdr"],"message/rfc822":["eml","mime"],"model/gltf+json":["gltf"],"model/gltf-binary":["glb"],"model/iges":["igs","iges"],"model/mesh":["msh","mesh","silo"],"model/vrml":["wrl","vrml"],"model/x3d+binary":["x3db","x3dbz"],"model/x3d+vrml":["x3dv","x3dvz"],"model/x3d+xml":["x3d","x3dz"],"text/cache-manifest":["appcache","manifest"],"text/calendar":["ics","ifb"],"text/coffeescript":["coffee","litcoffee"],"text/css":["css"],"text/csv":["csv"],"text/html":["html","htm","shtml"],"text/jade":["jade"],"text/jsx":["jsx"],"text/less":["less"],"text/markdown":["markdown","md"],"text/mathml":["mml"],"text/n3":["n3"],"text/plain":["txt","text","conf","def","list","log","in","ini"],"text/richtext":["rtx"],"text/rtf":["*rtf"],"text/sgml":["sgml","sgm"],"text/shex":["shex"],"text/slim":["slim","slm"],"text/stylus":["stylus","styl"],"text/tab-separated-values":["tsv"],"text/troff":["t","tr","roff","man","me","ms"],"text/turtle":["ttl"],"text/uri-list":["uri","uris","urls"],"text/vcard":["vcard"],"text/vtt":["vtt"],"text/xml":["*xml"],"text/yaml":["yaml","yml"],"video/3gpp":["3gp","3gpp"],"video/3gpp2":["3g2"],"video/h261":["h261"],"video/h263":["h263"],"video/h264":["h264"],"video/jpeg":["jpgv"],"video/jpm":["*jpm","jpgm"],"video/mj2":["mj2","mjp2"],"video/mp2t":["ts"],"video/mp4":["mp4","mp4v","mpg4"],"video/mpeg":["mpeg","mpg","mpe","m1v","m2v"],"video/ogg":["ogv"],"video/quicktime":["qt","mov"],"video/webm":["webm"]};const typesMap={};Object.keys(types).forEach(t=>{types[t].forEach(s=>{typesMap[s]=t})});var mime={lookup(t){const s=t.split(".").pop(),e=typesMap[s];return e||"application/octet-stream"}},sendFile=(t,s,e)=>{const i=mime.lookup(e);t.writeHead(200,{"Content-Type":i,"Content-Length":s.size}),fs.createReadStream(e).pipe(t)};const defaultPort=8088,defaultRoot=process.cwd(),index="index.html";class httpserver{constructor(t){const{port:s,root:e}=t;this.port=s||process.env.PORT||defaultPort,this.root=e||defaultRoot,this.port>1&&this.port<65535||(console.error("port %s error,should be 1-65535",this.port),process.exit(1))}start(t){http.createServer((s,e)=>{try{const i=route.getRouter(s.method);if(i){const[o,a]=s.url.split("?"),n=querystring.parse(a),[p,...c]=o.split("/").filter(t=>t);if(!p)return this.noIndex(s,e,o,n);const r=i[p];if(utiljs.isFunction(r))return r(s,e,c,n);{const i=route.getRegxpRouter(s.method,o);return i?i.handler(e,i.matches,n,this.root,t).then(t=>{t||this.tryfile(e,o)}).catch(t=>{const s=t.toString();log.log(s),this.err500(e,s)}):this.tryfile(e,o)}}this.err404(e)}catch(t){const s=t.toString();log.log(s),this.err500(e,s)}}).listen(this.port).on("error",t=>{console.info(t.toString())}),console.log("Server running at http://127.0.0.1:%s",this.port)}noIndex(t,s,e,i){const o=path.join(this.root,index);fs.stat(o,(t,e)=>{if(t){const t=utilnode.getStatus();return s.writeHead(200,{"Content-Type":"application/json"}),s.end(JSON.stringify(t))}sendFile(s,e,o)})}tryfile(t,s){const e=path.join(this.root,s);fs.stat(e,(s,i)=>{if(s)return this.err404(t);sendFile(t,i,e)})}err404(t){t.writeHead(404,{"Content-Type":"text/plain"}),t.end("Not Found\n")}err500(t,s){t.writeHead(500,{"Content-Type":"text/plain"}),t.end(s+"\n")}}const spawnSync=child_process.spawnSync,prettyTypes=["js","vue","jsx","json","css","less","ts","md"],esTypes=["js","jsx","vue"],configDir="config",exit=t=>process.exit(t);class lint{constructor(t,s){this.cwd=t,Array.isArray(s)&&s.length>0&&(this.prettierrc=path.join(this.cwd,configDir,".prettierrc"),this.eslintrc=path.join(this.cwd,configDir,".eslintrc.js"),this.files=this.parse(s))}parse(t){return t.map(t=>{const s=t.trim(),e=t.split(".").pop();let i=s;return path.isAbsolute(s)||(i=path.join(this.cwd,s)),{name:s,path:i,type:e}})}lint(){if(this.prettierrc&&this.eslintrc){try{fs.accessSync(this.prettierrc,fs.constants.R_OK|fs.constants.W_OK)}catch(t){console.error(t.toString()),exit(1)}try{fs.accessSync(this.eslintrc,fs.constants.R_OK|fs.constants.W_OK)}catch(t){console.error(t.toString()),exit(1)}for(let t=0,s=this.files.length;t<s;t++){const{path:s,type:e,name:i}=this.files[t];fs.access(s,fs.constants.R_OK|fs.constants.W_OK,t=>{if(t)return console.error(t.toString()),void exit(1);this.dolint(s,e.toLowerCase(),i)})}}}dolint(t,s,e){if(prettyTypes.includes(s)){const s=this.prettier(t);0!==s.status&&exit(s.status)}if(esTypes.includes(s)){const s=this.eslint(t);0!==s.status&&exit(s.status)}this.gitadd(t)}eslint(t){return spawnSync("eslint",["-c",this.eslintrc,"--fix",t],{stdio:"inherit"})}prettier(t){return spawnSync("prettier",["-c",this.prettierrc,"--write",t],{stdio:"inherit"})}gitadd(t){return spawnSync("git",["add",t],{stdio:"inherit"})}install(){const t=path.join(this.cwd,configDir,"pre-commit"),s=path.join(this.cwd,configDir,"post-commit"),e=path.join(this.cwd,".git","hooks","pre-commit"),i=path.join(this.cwd,".git","hooks","post-commit");try{fs.accessSync(t,fs.constants.R_OK|fs.constants.W_OK)}catch(t){console.error(t.toString()),exit(1)}fs.copyFileSync(t,e);try{fs.accessSync(s,fs.constants.R_OK|fs.constants.W_OK)}catch(t){console.error(t.toString()),exit(1)}fs.copyFileSync(s,i);fs.chmodSync(e,493),fs.chmodSync(i,493)}}const configName="static.json";var help="\nUsage:\n\tair [command] [flag]\nCommands:\n\tserve\t\t  \tstart air http server\n\tlint\t\t\teslint js\n\tcompress\t\tcompress less or javascript files\n\tinstall\t\t\tinstall git hooks\nFlags:\n\t-v     \t\t\tshow air version\n\t-h      \t\tshow this help information\n\t-p     \t\t\tset server listen port\n\t-d     \t\t\tset server document root\n\t--debug\t\t\tcompress with debug mode\n\t--clean\t\t\tcompress with clean mode\n";const version="0.6.0";new class{constructor(t){this.server=t}run(t){const[s,e,...i]=t;this.node=s,this.cfile=e,this.args=i,i.length>0?this.runArgs():this.runInit()}runArgs(){const[t,...s]=this.args,e=this.server[t];return utiljs.isFunction(e)?e.call(this.server,s):this.fallback(t,s)}runInit(){this.server.serve([])}fallback(t,s){"-v"==t?this.showVersion():"-h"==t?this.showHelp():this.server.serve([t,...s])}showHelp(){console.info(help)}showVersion(){console.log("air version: air/"+version)}}(new class{constructor(t){this.cwd=t}serve(t){const s=utiljs.getParams(t),e=utilnode.getConfig(this.cwd,configName);new httpserver(s).start(e)}run(t){}lint(t){new lint(this.cwd,t).lint()}gitlint(t){new lint(this.cwd,t).lint()}install(t){new lint(this.cwd,t).install()}compress(t){const s=utilnode.getConfig(this.cwd,configName),e=utiljs.getParams(t),i=t.filter(t=>"-"!==t.charAt(0)).length;if(t&&t.length>0&&i){const s=t.filter(t=>"less"==t.split(".").pop()).map(t=>path.join(this.cwd,t)),i=t.filter(t=>"js"==t.split(".").pop()).map(t=>path.join(this.cwd,t));compress.compressLess(s,Object.assign({compress:!e.debug},e)).then(t=>{const e=utilnode.getName(this.cwd,s,".less");fs.writeFileSync(`${e}.min.css`,t.css)}).catch(t=>{console.error(t.toString())}),compress.compressJs(i,e).then(t=>{const s=utilnode.getName(this.cwd,i,".js");fs.writeFileSync(`${s}.min.js`,t.code)}).catch(t=>{console.error(t.toString())})}else compress.compressByConfig(s,e)}}(process.cwd())).run(process.argv);